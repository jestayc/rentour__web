# Generated by Django 3.1.1 on 2020-09-30 02:58

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Departamento',
            fields=[
                ('id_depto', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('referencia', models.CharField(max_length=100, verbose_name='Referencia')),
                ('direccion', models.CharField(max_length=256, verbose_name='Dirección')),
                ('zona', models.CharField(max_length=100, verbose_name='Zona')),
                ('valor_arriendo', models.IntegerField(verbose_name='Valor Arriendo')),
                ('pct_anticipo', models.IntegerField(default=50, verbose_name='Porcentaje de Anticipo')),
                ('dormitorio', models.IntegerField(verbose_name='Número de dormitorios')),
                ('baño', models.IntegerField(verbose_name='Cantidad baños')),
                ('detalles', models.TextField(blank=True, null=True, verbose_name='Información Adicional')),
                ('estado_depto', models.CharField(choices=[('Disponible', 'Disponible'), ('Mantencion', 'Mantencion')], max_length=100)),
            ],
            options={
                'verbose_name': 'Departamento',
                'verbose_name_plural': 'Departamentos',
                'ordering': ['referencia'],
            },
        ),
        migrations.CreateModel(
            name='Elemento',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre Articulo')),
                ('valor', models.IntegerField(default=0, verbose_name='Valor')),
            ],
            options={
                'verbose_name': 'Elemento',
                'verbose_name_plural': 'Elementos',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='TipoMantencion',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('tipo_servicio', models.CharField(max_length=50, verbose_name='Tipo de Mantención')),
                ('descripcion', models.TextField(verbose_name='Descripción')),
            ],
            options={
                'verbose_name': 'Tipo de Mantención',
                'verbose_name_plural': 'Tipos de Mantenciones',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='TipoServicioExtra',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('tipo_servicio', models.CharField(max_length=50, verbose_name='Tipo Servicio Extra')),
                ('descripcion', models.TextField(verbose_name='Descripción')),
            ],
            options={
                'verbose_name': 'Tipo Servicio Extra',
                'verbose_name_plural': 'Tipos Servicios Extras',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Reserva',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('n_personas', models.IntegerField(default=0, verbose_name='Número Visitantes')),
                ('n_dias', models.IntegerField(default=0, verbose_name='Cantidad de Días')),
                ('visitantes', models.TextField(default='', verbose_name='Visitantes')),
                ('pago_anticipo', models.IntegerField(default=0, verbose_name='Pago Anticipo')),
                ('pago_faltante', models.IntegerField(default=0, verbose_name='Pago Faltante')),
                ('pago_multa', models.IntegerField(default=0, verbose_name='Pago Multa')),
                ('pago_servicioextra', models.IntegerField(default=0, verbose_name='Pago Servicio Extra')),
                ('pago_total', models.IntegerField(default=0, verbose_name='Pago Total')),
                ('monto_estadia', models.IntegerField(default=0, verbose_name='Monto Estadía')),
                ('monto_pordia', models.IntegerField(default=0, verbose_name='Monto por Día')),
                ('monto_servicioextra', models.IntegerField(default=0, verbose_name='Monto Servicios Extras')),
                ('monto_multa', models.IntegerField(default=0, verbose_name='Monto Multas')),
                ('monto_total', models.IntegerField(default=0, verbose_name='Monto Total')),
                ('fecha_reserva', models.DateField(default=datetime.date.today, editable=False, verbose_name='Fecha Reserva')),
                ('fecha_inicio', models.DateField(default=datetime.date.today, verbose_name='Fecha Inicio')),
                ('fecha_termino', models.DateField(default=datetime.date.today, verbose_name='Fecha Termino')),
                ('estado_reserva', models.CharField(choices=[('Nueva', 'Nueva'), ('En uso', 'En uso'), ('Anulada', 'Anulada'), ('Finalizada', 'Finalizada')], max_length=100)),
                ('id_depto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.departamento')),
                ('id_usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Mantencion',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('costo_mantencion', models.IntegerField(default=0, verbose_name='Costo Mantención')),
                ('fecha_creacion', models.DateField(default=datetime.date.today, editable=False, verbose_name='Fecha Creación')),
                ('fecha_inicio', models.DateField(default=datetime.date.today, verbose_name='Fecha Inicio')),
                ('fecha_termino', models.DateField(default=datetime.date.today, verbose_name='Fecha Termino')),
                ('id_depto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.departamento')),
                ('id_mantencion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.tipomantencion')),
            ],
            options={
                'verbose_name': 'Mantención',
                'verbose_name_plural': 'Mantenciones',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Inventario',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('cantidad', models.IntegerField(default=0, verbose_name='Cantidad')),
                ('id_depto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.departamento')),
                ('id_elemento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.elemento')),
            ],
        ),
        migrations.CreateModel(
            name='DetalleServicio',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('conductor', models.CharField(max_length=100, verbose_name='Nombre Conductor')),
                ('ubicacion', models.CharField(max_length=100, verbose_name='Ubicación')),
                ('vehiculo', models.CharField(max_length=10, verbose_name='Patente')),
                ('valor', models.IntegerField(default=0, verbose_name='Valor')),
                ('fecha', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha')),
                ('estado_servicio', models.CharField(choices=[('Solicitud', 'Solicitud'), ('Aceptada', 'Aceptada'), ('Anulada', 'Anulada'), ('Realizado', 'Realizado')], max_length=100)),
                ('id_depto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.departamento')),
                ('id_reserva', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.reserva')),
                ('id_tiposervicioextra', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.tiposervicioextra')),
            ],
        ),
        migrations.CreateModel(
            name='CheckOut',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('check_lista', models.BooleanField(default=True, verbose_name='CheckList Realizado')),
                ('detalle_multa', models.TextField(default='', verbose_name='Detalle Multa')),
                ('check_multa', models.BooleanField(default=True, verbose_name='Cálculo Multa')),
                ('total_multa', models.IntegerField(default=0, verbose_name='Monto Multa')),
                ('check_pdf', models.BooleanField(default=True, verbose_name='Impresión PDF')),
                ('id_depto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.departamento')),
                ('id_reserva', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.reserva')),
            ],
            options={
                'verbose_name': 'CheckOut',
                'verbose_name_plural': 'Checks Out',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='CheckList',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('check', models.BooleanField(default=True)),
                ('cantidad_real', models.IntegerField(default=0, verbose_name='Cantidad Real')),
                ('monto_multa', models.IntegerField(default=0, verbose_name='Monto Multa')),
                ('id_depto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.departamento')),
                ('id_inventario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.inventario')),
                ('id_reserva', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.reserva')),
            ],
            options={
                'verbose_name': 'CheckList',
                'verbose_name_plural': 'Checks List',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='CheckIn',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('check_pago', models.BooleanField(default=False, verbose_name='Completó Pago')),
                ('check_lista', models.BooleanField(default=False, verbose_name='CheckList Realizado')),
                ('check_pdf', models.BooleanField(default=False, verbose_name='Impresión PDF')),
                ('check_servicio', models.BooleanField(default=False, verbose_name='Servicios Extras')),
                ('check_llave', models.BooleanField(default=False, verbose_name='Entrega Llave')),
                ('id_depto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.departamento')),
                ('id_reserva', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.reserva')),
            ],
            options={
                'verbose_name': 'CheckIn',
                'verbose_name_plural': 'Checks In',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Agenda',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('fecha_inicio', models.DateField(default=datetime.date.today, verbose_name='Fecha Inicio')),
                ('fecha_termino', models.DateField(default=datetime.date.today, verbose_name='Fecha Termino')),
                ('id_depto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.departamento')),
                ('id_mantencion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web.mantencion')),
                ('id_reserva', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web.reserva')),
            ],
            options={
                'verbose_name': 'Agenda',
                'verbose_name_plural': 'Agendas',
                'ordering': ['id'],
            },
        ),
    ]
